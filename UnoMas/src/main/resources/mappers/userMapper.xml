<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.unomas.mapper.userMapper">
  
  <!-- 관리자 등록 쿼리문 -->
  <insert id="joinAdmin">
      INSERT into admin(admin_id, admin_pass) 
      VALUES (#{admin_id}, #{admin_pass})
  </insert>
  
    <!-- 유저 회원가입 -->
  <insert id="joinUser">
	INSERT into users(user_id, user_pass, user_name, user_birth, user_phone, user_email, user_postalcode, user_roadaddr, user_detailaddr, user_emailagree) 
	VALUES (#{user_id}, #{user_pass}, #{user_name}, #{user_birth}, #{user_phone}, #{user_email}, #{user_postalcode}, #{user_roadaddr}, #{user_detailaddr}, #{user_emailagree})  
  </insert>
  
  <insert id="joinAddr">
  	INSERT into order_addr(user_num, addr_name, addr_postalcode, addr_roadaddr, addr_detailaddr,addr_primary, addr_recipient, addr_phone)
  	VALUES (#{user_num}, "집(기본)", #{addr_postalcode}, #{addr_roadaddr}, #{addr_detailaddr}, 1, #{addr_recipient}, #{addr_phone})
  </insert>
  
  <!-- 아이디로 회원번호 찾기 -->
  <select id="findNum" resultType="int">
  	SELECT user_num
  	FROM users
  	WHERE user_id=#{user_id}
  </select>
  
  <!-- 아이디 중복검사 -->
  <select id="idCheck_sql" resultType="int">
  	SELECT count(*) 
  	FROM users 
  	WHERE user_id=#{user_id}
  </select>
  
  <!-- 아이디 찾기 -->
  <select id="findID_sql" resultType="String">
  	SELECT user_id 
  	FROM users 
  	WHERE user_email=#{user_email} and user_name=#{user_name}
  </select>
  
  <!-- 비번 찾기 -->
  <select id="findPW_sql" resultType="String">
  	SELECT count(user_num)
  	FROM users 
  	WHERE user_name=#{user_name} and user_email=#{user_email} and user_name=#{user_name}
  </select>
  
  <!-- 비번 변경 -->
  <update id="changePW_sql">
  	UPDATE users 
  	SET user_pass=#{user_pass} 
  	WHERE user_id=#{user_id}
  </update>
  
  <!-- 로그인 -->
  <select id="loginUser" resultType="com.april.unomas.domain.UserVO">
  	SELECT user_id, user_pass, user_status, user_num
  	FROM users
  	WHERE user_id=#{user_id} and user_pass=#{user_pass}
  </select>

  <!-- 회원 정보 가져오기 -->
  <select id="getUserInfo" parameterType="String" resultType="com.april.unomas.domain.UserVO">
   select user_id, user_name, user_birth, user_phone, user_email, 
   user_postalcode, user_roadaddr, user_detailaddr, user_status, user_emailagree, user_point, user_bank, user_account, user_account_holder
   from users 
   where user_id=#{user_id}
  </select>
  
  <!-- 회원번호로 회원정보 가져오기 -->
  <select id="getUserInfoByNum" resultType="UserVO">
    SELECT user_num, user_id, user_name, user_birth, user_phone, user_email, user_postalcode, user_roadaddr, 
    user_detailaddr, user_status, user_emailagree, user_point, user_bank, user_account, user_account_holder
    FROM users
    WHERE user_num = #{user_num}
  </select>
  
  <!-- 회원정보 수정 -->
  <update id="updateUser" >
  	update users 
  	set user_name=#{user_name}, user_email=#{user_email}, user_birth=#{user_birth}, user_phone=#{user_phone},
  	user_bank=#{user_bank}, user_account=#{user_account}, user_account_holder=#{user_account_holder}, user_emailagree=#{user_emailagree}
  	where user_id=#{user_id}
  </update>
  
  <!-- 회원 추가 배송지 조회 -->
  <select id="getAddAddr" parameterType="int" resultType="com.april.unomas.domain.UserVO">
  	select addr_num, user_num, addr_name, addr_postalcode, addr_roadaddr, addr_detailaddr
  	from order_addr
  	where user_num=#{user_num}
  </select>
  
  <!-- 회원 추가 배송지 수정 -->
  <update id="updateAddAddr">
  	update order_addr
  	set addr_name=#{addr_name}, addr_postalcode=#{addr_postalcode}, addr_roadaddr=#{addr_roadaddr}, addr_detailaddr=#{addr_detailaddr}, addr_primary=0
  	where user_num=#{user_num} and addr_num=#{addr_num}
  </update>
  
  <!-- 비밀번호 체크 -->
  <select id="checkPW" resultType="int">
    SELECT count(*)
  	FROM users
  	WHERE user_id=#{user_id} and (user_pass=#{user_pass} OR 
  	(SELECT count(*) FROM admin WHERE admin_pass=#{user_pass}))
  </select>
  
  <!-- 회원탈퇴 -->
  <update id="deleteUser">
  	UPDATE users 
  	SET user_status=-1
  	WHERE user_id=#{user_id}
  </update>

  <!-- 내 리뷰 -->
  <select id="myReviewCnt" parameterType="String" resultType="int">
  	SELECT count(review_num)
  	FROM board_review 
  	WHERE user_num=${value}
  </select>
  
  <select id="getMyReview" parameterType="Map" resultType="com.april.unomas.domain.BoardReviewVO">
  	SELECT * 
  	FROM board_review AS r
  	JOIN products AS p ON p.prod_num = r.prod_num
  	WHERE user_num=${num}
  	ORDER BY review_regdate DESC 
  	LIMIT #{cri.pageStart},#{cri.perPageNum}
  </select>
  
  <!-- 내 상품 문의 -->
  <select id="myPQcnt" parameterType="String" resultType="int">
  	SELECT count(p_inquiry_num)
  	FROM prod_inquiry
  	WHERE user_num=${value}
  </select>
  
  <select id="getMyPQ" parameterType="Map" resultType="com.april.unomas.domain.ProdInquiryVO">
  	SELECT * 
  	FROM prod_inquiry AS pi
  	JOIN products AS p ON p.prod_num = pi.prod_num
  	WHERE user_num=${num}
  	ORDER BY p_inquiry_regdate DESC 
  	LIMIT #{cri.pageStart},#{cri.perPageNum}
  </select>

  
  
  <select id="getMyPQcomment" parameterType="int" resultType="com.april.unomas.domain.ProdCommentVO">
  	SELECT * 
  	FROM prod_comments
  	WHERE p_inquiry_num=${value}
  </select>
  
  
  <!-- 1:1 문의 -->
  <select id="myQuestioncnt" parameterType="String" resultType="int">
  	SELECT count(*)
  	FROM board_qna
  	WHERE user_num=${value}
  </select>
    
  <select id="getMyQuestion" parameterType="Map" resultType="com.april.unomas.domain.QnaVO">
  	SELECT * 
  	FROM board_qna AS bq
  	JOIN qna_category AS qc ON bq.qnacate_num = qc.qnacate_num
  	WHERE user_num=${num}
  	ORDER BY qna_regdate DESC 
  	LIMIT #{cri.pageStart},#{cri.perPageNum}
  </select>
  
  <select id="getQcomment" resultType="com.april.unomas.domain.Qna_ComVO">
  	SELECT * 
  	FROM qna_comments
  	WHERE qna_num=${value}
  </select>
  
  <!-- 결제완료 후 적립금 업데이트 -->
  <update id="updatePoint">
    UPDATE users
    SET user_point = user_point + #{user_point}
    WHERE user_num = #{user_num}
  </update>
  
  <select id="getUserP" resultType="int">
  	SELECT user_point
  	FROM users
  	WHERE user_num=#{num}
  </select>
  
  <select id="pointCount" resultType="int">
  	SELECT count(point_num)
  	FROM point
  	WHERE user_num=#{num}
  </select>
  
  <select id="getpList" parameterType="Map" resultType="com.april.unomas.domain.PointVO">
   SELECT *
   FROM point
   WHERE user_num=#{num}
   ORDER BY point_regdate DESC
   LIMIT #{cri.pageStart},#{cri.perPageNum}
  </select>
  
</mapper>