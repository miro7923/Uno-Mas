<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.unomas.mapper.userMapper">
  <!-- 디비시간정보 가져오기 -->
  <!-- 겟타임 메서드를 호출하면 현재시간을 받아서 스트링 형태로 가져올 것이다. -->
  <select id="getTime" resultType="string">
      select now()
  </select>
  
  <!-- 관리자 등록 쿼리문 -->
  <insert id="joinAdmin">
      insert into admin(admin_id, admin_pass) 
      values(#{admin_id}, #{admin_pass})
  </insert>
  
    <!-- 유저 회원가입 -->
  <insert id="joinUser">
	insert into users(user_id, user_pass, user_name, user_birth, user_phone, user_email, user_postalcode, user_roadaddr, user_detailaddr, user_emailagree) 
	values(#{user_id}, #{user_pass}, #{user_name}, #{user_birth}, #{user_phone}, #{user_email}, #{user_postalcode}, #{user_roadaddr}, #{user_detailaddr}, #{user_emailagree})  
  </insert>
  
  <!-- 아이디 중복검사 -->
  <select id="idCheck_sql" resultType="int">
  	select count(*) 
  	from users 
  	where user_id=#{user_id}
  </select>
  
  <!-- 아이디 찾기 -->
  <select id="findID_sql" resultType="String">
  	select user_id 
  	from users 
  	where user_email=#{user_email} and user_name=#{user_name}
  </select>
  
  <!-- 비번 찾기 -->
  <select id="findPW_sql" resultType="String">
  	select count(user_num)
  	from users 
  	where user_name=#{user_name} and user_email=#{user_email} and user_name=#{user_name}
  </select>
  
  <!-- 비번 변경 -->
  <update id="changePW_sql">
  	update users 
  	set user_pass=#{user_pass} 
  	where user_id=#{user_id}
  </update>
  
  <!-- 로그인 -->
  <select id="loginUser" resultType="com.april.unomas.domain.UserVO">
  	select user_num, user_id, user_pass, user_status
  	from users 
  	where user_id=#{user_id} and user_pass=#{user_pass} 
  </select>
  
  <!-- 회원 정보 가져오기 -->
  <select id="getUserInfo" parameterType="String" resultType="com.april.unomas.domain.UserVO">
	select user_id, user_name, user_birth, user_phone, user_email, 
	user_postalcode, user_roadaddr, user_detailaddr, user_status, user_emailagree, user_point, user_bank, user_account, user_account_holder
	from users 
	where user_id = #{user_id}
  </select>
  
  <!-- 회원정보 수정 -->
  <update id="updateUser" >
  	update users 
  	set user_name=#{user_name}, user_email=#{user_email}, user_birth=#{user_birth}, user_phone=#{user_phone},
  		user_postalcode=#{user_postalcode}, user_roadaddr=#{user_roadaddr}, user_detailaddr=#{user_detailaddr},
  		user_bank=#{user_bank}, user_account=#{user_account}, user_account_holder=#{user_account_holder}
  	where user_id=#{user_id}
  </update>
  

  <!-- 비밀번호 체크 -->
  <select id="checkPW" resultType="int">
  	SELECT count(*)
  	FROM users
  	WHERE user_id=#{user_id} and (user_pass=#{user_pass} OR 
  	(SELECT count(*) FROM admin WHERE admin_pass=#{user_pass}))
  </select>

  
  <!-- 회원탈퇴 -->
  <update id="deleteUser">
  	UPDATE users 
  	SET user_status=-1, user_deldate=now()
  	WHERE user_id=#{user_id}
  </update>
  
  <!-- 내 리뷰 -->
  <select id="myReviewCnt" parameterType="String" resultType="int">
  	SELECT count(review_num)
  	FROM board_review 
  	WHERE user_num=${value}
  </select>
  
  <select id="getMyReview" parameterType="Map" resultType="com.april.unomas.domain.BoardReviewVO">
  	SELECT * 
  	FROM board_review 
  	WHERE user_num=${num}
  	ORDER BY review_regdate DESC 
  	LIMIT #{cri.pageStart},#{cri.perPageNum}
  </select>
  
  <!-- 내 상품 리뷰 -->
  <select id="myPQcnt" parameterType="String" resultType="int">
  	SELECT count(p_inquiry_num)
  	FROM prod_inquiry
  	WHERE user_num=${value}
  </select>
  
  <select id="getMyPQ" parameterType="Map" resultType="com.april.unomas.domain.ProdInquiryVO">
  	SELECT * 
  	FROM prod_inquiry 
  	WHERE user_num=${num}
  	ORDER BY p_inquiry_regdate DESC 
  	LIMIT #{cri.pageStart},#{cri.perPageNum}
  </select>
  
  <!-- 1:1 문의 -->
  <select id="myQuestioncnt" parameterType="String" resultType="int">
  	SELECT count(qna_num)
  	FROM board_qna
  	WHERE user_num=${value}
  </select>
  
  <select id="getMyQuestion" parameterType="Map" resultType="com.april.unomas.domain.QnaVO">
  	SELECT * 
  	FROM board_qna 
  	WHERE user_num=${num}
  	ORDER BY qna_regdate DESC 
  	LIMIT #{cri.pageStart},#{cri.perPageNum}
  </select>
  
</mapper>