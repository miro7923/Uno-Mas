<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="com.april.unomas.mappers.cartMapper">
	<!-- 장바구니에 담기 -->
    <insert id="insert">
        insert into cart (user_num, prod_num, prod_amount)
        values (#{user_num}, #{prod_num}, #{prod_amount})
 
		<!-- 장바구니 담기 버튼을 누를때 실행되는 쿼리문 -->
		<!-- user_num, product_num, amount 저장 -->
		<!-- cart_num는 자동으로 1씩 증가하게 설정 -->
    </insert>
    
    <!-- 장바구니 목록 -->
    <select id="listCart" resultType="com.april.unomas.domain.CartVO">
    <!-- DAO에서 listCart라는 태그로 인해 실행되고 결과타입은 DTO타입으로 한다. (다른계층으로 보내기 위해서) -->
    
        select cart_num, p.prod_num, c.user_num, prod_name, prod_amount, prod_price, (prod_price*prod_amount) money
        from users m, cart c, products p
        where m.user_num=c.user_num and c.prod_num=p.prod_num and c.user_num=#{user_num} order by cart_num;
                    
    </select>
    
    <!-- 장바구니 전체 금액 -->
    <select id="sumMoney" resultType="int">
 
        select nvl(sum(prod_price*prod_amount),0) money
		<!--금액과 상품갯수를 곱한값과 0을더해서 0이 나오는 것을 검색한다. -->
		<!--그러니까 아무것도 담지 않았을때를 확인하는 것이다. -->
		<!--빈값이 null이면 안되기 때문에 대체값으로 0이 출력되게끔 만들었다 -->
 
        from cart c,products p
		<!-- 장바구니 테이블과 상품 테이블로 부터 -->
 
        where c.prod_num=p.prod_num and user_num=#{user_num}
		<!--조건 : 장바구니테이블의 상품 id가 상품테이블의 상품 id와 같고, 요청하는 회원의 id와 같은 경우 -->
 
    </select>
    
    <!-- 장바구니 개별 상품 삭제 -->
    <delete id="delete">
        delete from cart where cart_num=#{cart_num}
    </delete>
    
    <!-- 장바구니 수정 -->
	<update id="modifyCart">
		UPDATE cart	SET prod_amount = #{prod_amount} 
		WHERE user_num= #{user_num} AND prod_num = #{prod_num}
	</update>
	
    <!-- 장바구니 비우기 -->
    <delete id="deleteAll">
        delete from cart where user_num=#{user_num}
        <!-- 장바구니테이블로부터 회원의 아이디와 삭제하고자하는 회원의 아이디가 같으면 장바구니에 있는 자료를 전부다 삭제 -->
    </delete>
    
    <!-- 장바구니에 기존의 상품이 존재하는지 확인 -->
	<select id="countCart" resultType="int">
		SELECT COUNT(*) FROM cart 
		WHERE user_num= #{user_num} AND prod_num = #{prod_num}
	</select>
	
	<!-- 장바구니에 기존의 상품이 존재하면 수정 -->
	<update id="updateCart">
		UPDATE cart	SET prod_amount = prod_amount + #{prod_amount} 
		WHERE user_num= #{user_num} AND prod_num = #{prod_num}
	</update>
    
    
</mapper>
