<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="com.april.unomas.mappers.cartMapper">
	<!-- 장바구니에 담기 -->
    <insert id="insert">
        INSERT INTO unomasdb.cart (user_num, prod_num, prod_amount)
        VALUES (#{user_num}, #{prod_num}, #{prod_amount})         
        ON DUPLICATE KEY UPDATE prod_amount=prod_amount+values(prod_amount)

    </insert>
    
    <!-- 장바구니 목록 -->
    <select id="listCart" resultType="com.april.unomas.domain.CartVO">
    <!-- DAO에서 listCart라는 태그로 인해 실행되고 결과타입은 VO타입으로 한다. (다른계층으로 보내기 위해서) -->
        SELECT cart_num, p.prod_num, c.user_num, prod_name, prod_image3, prod_amount, prod_price, (prod_price*prod_amount) money
        FROM cart c, products p
        WHERE c.user_num = #{user_num} and c.prod_num = p.prod_num 
        ORDER BY cart_num;
    </select>
    
    <!-- 회원의 장바구니 목록에서 선택된 상품만 가져오기 -->
    <select id="getSelectedItems" resultType="CartVO">
        SELECT c.cart_num, p.prod_num, c.user_num, prod_name, prod_amount, prod_price, (prod_price * prod_amount) money
		FROM cart c 
		JOIN products p ON c.prod_num = p.prod_num
		WHERE c.cart_num = #{cart_num};
    </select>
    
    <!-- 장바구니 개별 상품 삭제 -->
    <delete id="delete">
        DELETE
        FROM unomasdb.cart
        WHERE cart_num = #{cart_num}
    </delete>
    
    <!-- 회원번호랑 상품번호로 장바구니 개별 상품 삭제 -->
    <delete id="deleteByUserNum">
        DELETE FROM cart
        WHERE user_num = #{user_num} and prod_num = #{prod_num}
    </delete>
	
    <!-- 장바구니 수정 -->
	<update id="modifyCart">
		UPDATE cart	SET prod_amount = #{prod_amount} 
		WHERE user_num= #{user_num} AND prod_num = #{prod_num}
	</update>
	
    <!-- 장바구니 비우기 -->
    <delete id="deleteAll">
        DELETE
        FROM unomasdb.cart
        WHERE user_num = #{user_num}
        <!-- 장바구니테이블로부터 회원의 아이디와 삭제하고자하는 회원의 아이디가 같으면 장바구니에 있는 자료를 전부다 삭제 -->
    </delete>
    
    <!-- 장바구니에 기존의 상품이 존재하는지 확인 -->
	<select id="countCart" resultType="int">
		SELECT COUNT(*) FROM cart 
		WHERE user_num= #{user_num} AND prod_num = #{prod_num}
	</select>
	
	<!-- 장바구니에 기존의 상품이 존재하면 수정 -->
	<update id="updateCart">
		UPDATE unomasdb.cart
		SET prod_amount = prod_amount + #{prod_amount} 
		WHERE user_num = #{user_num} AND prod_num = #{prod_num}
	</update>
    
    <!-- 장바구니 전체 금액 -->
	<select id="sumMoney" resultType="int">
		SELECT IFNULL(SUM(p.prod_price * c.prod_amount),0) money
		FROM unomasdb.cart c, unomasdb.products p
		WHERE c.prod_num = p.prod_num AND c.user_num = #{user_num}
	</select>
</mapper>
